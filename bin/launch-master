#/usr/bin/env bash

type=m1.xlarge
secgroup=default
monitoring=
zone=
ami=
keypair=root

while [ $# -gt 0 ] ; do
  case "$1" in
    -t | --type)       type="$2"; shift;;
    -m | --monitoring) monitoring=yes;;
    -s | --secgroup)   secgroup="$2"; shift;;
    -z | --zone)       zone="$2"; shift;;
    --ami)             ami="$2"; shift;;
    -k | --keypair)    keypair="$2"; shift;;
    -g | --gc)         gc="$2"; shift;;
    -m | --mem)        mem="$2"; shift;;
    --)                shift; break;;
    -*)                shift;;
    *)                 break;;
  esac
  shift
done

bin=`dirname "$0"`
bin=`cd "$bin"; pwd`
export bin
if [ -f "$bin"/credentials.sh ] ; then
  source "$bin"/credentials.sh
fi
source "$bin"/env.sh

echo "TYPE: $type"
echo "IMAGE_VERSION: $IMAGE_VERSION"

if [ -z $ami ] ; then
  echo "Searching for AMI for $IMAGE_VERSION (may take some time if on a slow network)..."
  CMD="ec2-describe-images $TOOL_OPTS -a | grep $S3_ACCOUNT | grep $IMAGE_VERSION | grep available | awk '{print $2}'"
  echo $CMD
  AMI_IMAGE=`ec2-describe-images $TOOL_OPTS -a | grep $S3_ACCOUNT | grep $IMAGE_VERSION | grep available | awk '{print $2}'`
else
  AMI_IMAGE=$ami
fi
echo "AMI_IMAGE: $AMI_IMAGE"

[ -z $AMI_IMAGE ] && echo "No AMI found" && exit 1
echo "export GC=$gc">> "$bin"/image/tarball/setup-master-remote.pre
echo "export MEMORY='$mem'">> "$bin"/image/tarball/setup-master-remote.pre
echo "/tmp/userdata$$"
cat "$bin"/image/tarball/setup-master-remote.pre > /tmp/userdata$$
cat "$bin"/image/tarball/setup-remote >> /tmp/userdata$$
if [ "$HADOOP_VERSION" = "1.0.4" ]; then
	cat "$bin"/image/tarball/setup-master-remote.post >> /tmp/userdata$$
else
        echo "This should work"
        cat "$bin"/image/tarball/setup-master-remote_hadoop-2.0.3.post >> /tmp/userdata$$
fi
gzip -9 /tmp/userdata$$

CMD="ec2-run-instances $AMI_IMAGE $TOOL_OPTS -k $keypair -t $type -g $secgroup -f /tmp/userdata$$.gz"
echo $CMD
if [ ! -z "$monitoring" ] ; then
  CMD="$CMD -m"
fi
if [ ! -z "$zone" ] ; then
  CMD="$CMD -z $zone"
fi
OUTPUT=`$CMD`
INSTANCE=`echo $OUTPUT | awk '{print $6}'`
echo $OUTPUT

rm -f /tmp/userdata$$.gz

echo -n "Polling server status "
while true; do
  printf "."
  HOSTNAME=`ec2-describe-instances $TOOL_OPTS $INSTANCE | grep running | awk '{print $4}'`
  if [ ! -z $HOSTNAME ] ; then
    break;
  fi
  sleep 1
done
echo

echo -n "Uploading private key "
while true ; do
  printf "."
  scp $SSH_OPTS $EC2_ROOT_SSH_KEY ec2-user@$HOSTNAME:~/.ssh/identity > /dev/null 2>&1
  [ $? -eq 0 ] && break
  sleep 1
done
echo

# store master to tmp file for easy access later
echo -n $HOSTNAME > /tmp/ec2-master

echo "HOSTNAME: $HOSTNAME"
echo $HOSTNAME > /tmp/ec2-master

#!/usr/bin/env bash

type=m1.xlarge
nrhosts=1
monitoring=
secgroup=default
price=0.5
zone=
ami=
on_demand=
keypair=root
security=

while [ $# -gt 0 ] ; do
  case "$1" in
    -t | --type)       type="$2"; shift;;
    -h | --hosts)      nrhosts="$2"; shift;;
    -m | --monitoring) monitoring=yes;;
    -s | --secgroup)   secgroup="$2"; shift;;
    -p | --price)      price="$2"; shift;;
    -z | --zone)       zone="$2"; shift;;
    -o | --on-demand)  on_demand=y ;;
    -k | --keypair)    keypair="$2"; shift;;
    --ami)             ami="$2"; shift;;
    --security)        security=y ;;
    --)                shift; break;;
    -*)                shift;;
    *)                 break;;
  esac
  shift
done

if [ $# -gt 0 ] ; then
  MASTER_HOST=$1
  shift
else
  echo "usage: launch-slaves <master> <count>" && exit 1
fi

if [ $# -gt 0 ] ; then
  nrhosts=$1
  shift
else
  echo "usage: launch-slaves <master> <count>" && exit 1
fi

bin=`dirname "$0"`
bin=`cd "$bin"; pwd`
export bin
if [ -f "$bin"/credentials.sh ] ; then
  source "$bin"/credentials.sh
fi
source "$bin"/env.sh

echo "TYPE: $type"
echo "IMAGE_VERSION: $IMAGE_VERSION"
echo "MASTER_HOST: $MASTER_HOST"

if [ -z $ami ] ; then
  echo "Searching for AMI for $IMAGE_VERSION (may take some time if on a slow network)..."
  AMI_IMAGE=`ec2-describe-images $TOOL_OPTS -a | grep $S3_ACCOUNT | grep $IMAGE_VERSION | grep available | awk '{print $2}'`
else
  AMI_IMAGE=$ami
fi

echo "AMI_IMAGE: $AMI_IMAGE"

[ -z $AMI_IMAGE ] && echo "No AMI found" && exit 1

cat "$bin"/image/tarball/setup-slave-remote.pre > /tmp/userdata$$
echo "MASTER_HOST=$MASTER_HOST" >> /tmp/userdata$$
if [ -z $security ]; then
  cat "$bin"/image/tarball/setup-remote-nonsecurity >> /tmp/userdata$$
else
  cat "$bin"/image/tarball/setup-remote >> /tmp/userdata$$
fi
if [ "$HADOOP_VERSION" = "1.0.4" ]; then
  cat "$bin"/image/tarball/setup-slave-remote.post >> /tmp/userdata$$
else
  cat "$bin"/image/tarball/setup-slave-remote_hadoop-2.0.3.post >> /tmp/userdata$$
fi
gzip -9 /tmp/userdata$$

if [ ! -z "$on_demand" ] ; then
  CMD="ec2-run-instances $AMI_IMAGE $TOOL_OPTS -n $nrhosts -k $keypair -t $type -g $secgroup -f /tmp/userdata$$.gz"
else
  CMD="ec2-request-spot-instances $AMI_IMAGE $TOOL_OPTS -n $nrhosts -k $keypair -t $type -g $secgroup -p $price -f /tmp/userdata$$.gz"
fi
if [ ! -z "$monitoring" ] ; then
  CMD="$CMD -m"
fi
if [ ! -z "$zone" ] ; then
  CMD="$CMD -z $zone"
fi
OUTPUT=`$CMD`
echo $OUTPUT

rm -f /tmp/userdata$$.gz

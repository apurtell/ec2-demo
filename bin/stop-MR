#!/bin/bash
#script to stop the MR cluster remotely
ami=
while [ $# -gt 0 ] ; do
  case "$1" in
    --ami)             ami="$2"; shift;;
    --)                shift; break;;
    -*)                shift;;
    *)                 break;;
  esac
  shift
done

bin=`dirname "$0"`
bin=`cd "$bin"; pwd`
export bin
if [ -f "$bin"/credentials.sh ] ; then
  source "$bin"/credentials.sh
fi
source "$bin"/env.sh

if [ -z $ami ] ; then
  echo "Searching for AMI for $IMAGE_VERSION (may take some time if on a slow network)..."
  CMD="ec2-describe-images $TOOL_OPTS -a | grep $S3_ACCOUNT | grep $IMAGE_VERSION | grep available | awk '{print $2}'"
  echo $CMD
  AMI_IMAGE=`ec2-describe-images $TOOL_OPTS -a | grep $S3_ACCOUNT | grep $IMAGE_VERSION | grep available | awk '{print $2}'`
else
  AMI_IMAGE=$ami
fi
echo "AMI_IMAGE: $AMI_IMAGE"
[ -z $AMI_IMAGE ] && echo "No AMI found" && exit 1

echo "Stopping NodeManager in all slave nodes"
ec2-describe-instances $TOOL_OPTS --filter instance-lifecycle=spot --filter image-id=$AMI_IMAGE | grep running | awk '{print $4}'>/tmp/ec2-slaves
# Stop the NodeManager in the slave nodes
cat /tmp/ec2-slaves | while read SLAVE
do
 echo "Stopping NodeManager at Slave : $SLAVE"
 ssh -n $SSH_OPTS "ec2-user@$SLAVE" "sudo /usr/lib/hadoop/sbin/yarn-daemon.sh --config /etc/hadoop/conf stop nodemanager"
done

# stop the ResourceManager in the master node
cat /tmp/ec2-master | while read MASTER
do
 echo "Stopping ResourceManager at $MASTER"
 ssh -n $SSH_OPTS "ec2-user@$MASTER" "sudo /usr/lib/hadoop/sbin/yarn-daemon.sh --config /etc/hadoop/conf stop resourcemanager"
done
